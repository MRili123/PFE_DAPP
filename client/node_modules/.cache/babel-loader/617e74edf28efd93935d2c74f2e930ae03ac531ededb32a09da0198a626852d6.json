{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ilias\\\\OneDrive\\\\Bureau\\\\contract_test\\\\client\\\\src\\\\pages\\\\VerificateurParitePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Web3 from 'web3';\nimport VerificateurPariteJSON from '../../build/contracts/VerificateurParite.json';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VerificateurParitePage() {\n  _s();\n  const [web3, setWeb3] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [accounts, setAccounts] = useState([]);\n  const [nombre, setNombre] = useState('');\n  const [result, setResult] = useState('');\n  const [txHash, setTxHash] = useState('');\n  const [gasUsed, setGasUsed] = useState('');\n  const [latestBlock, setLatestBlock] = useState(null);\n  useEffect(() => {\n    const init = async () => {\n      const web3 = new Web3(window.ethereum || 'http://localhost:7545');\n      setWeb3(web3);\n      const accounts = await web3.eth.requestAccounts();\n      setAccounts(accounts);\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = VerificateurPariteJSON.networks[networkId];\n      if (deployedNetwork) {\n        const contract = new web3.eth.Contract(VerificateurPariteJSON.abi, deployedNetwork.address);\n        setContract(contract);\n        const block = await web3.eth.getBlock('latest');\n        setLatestBlock(block.number);\n      } else {\n        alert('VerificateurParite contract is not deployed on this network.');\n      }\n    };\n    init();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const result = await contract.methods.estPair(nombre).call();\n      setResult(result ? 'Pair' : 'Impair');\n      setTxHash('Appel en lecture (call)');\n      setGasUsed('-');\n      const block = await web3.eth.getBlock('latest');\n      setLatestBlock(block.number);\n    } catch (err) {\n      console.error(err);\n      alert('Erreur lors de la vérification de parité');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Exercice 7 : V\\xE9rificateur Parit\\xE9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Nombre :\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: nombre,\n          onChange: e => setNombre(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"V\\xE9rifier la parit\\xE9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"R\\xE9sultat :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Infos Blockchain\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Compte connect\\xE9 : \", accounts[0]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Dernier bloc : \", latestBlock]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), txHash && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"D\\xE9tails de la derni\\xE8re transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Transaction Hash : \", txHash]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Gas utilis\\xE9 : \", gasUsed]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"\\u2190 Retour au sommaire\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(VerificateurParitePage, \"MM1DnygNy1vyLvsK1+YWCNVm+28=\");\n_c = VerificateurParitePage;\nexport default VerificateurParitePage;\nvar _c;\n$RefreshReg$(_c, \"VerificateurParitePage\");","map":{"version":3,"names":["React","useState","useEffect","Web3","VerificateurPariteJSON","Link","jsxDEV","_jsxDEV","VerificateurParitePage","_s","web3","setWeb3","contract","setContract","accounts","setAccounts","nombre","setNombre","result","setResult","txHash","setTxHash","gasUsed","setGasUsed","latestBlock","setLatestBlock","init","window","ethereum","eth","requestAccounts","networkId","net","getId","deployedNetwork","networks","Contract","abi","address","block","getBlock","number","alert","handleSubmit","e","preventDefault","methods","estPair","call","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","to","_c","$RefreshReg$"],"sources":["C:/Users/ilias/OneDrive/Bureau/contract_test/client/src/pages/VerificateurParitePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Web3 from 'web3';\r\nimport VerificateurPariteJSON from '../../build/contracts/VerificateurParite.json';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction VerificateurParitePage() {\r\n  const [web3, setWeb3] = useState(null);\r\n  const [contract, setContract] = useState(null);\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [nombre, setNombre] = useState('');\r\n  const [result, setResult] = useState('');\r\n  const [txHash, setTxHash] = useState('');\r\n  const [gasUsed, setGasUsed] = useState('');\r\n  const [latestBlock, setLatestBlock] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      const web3 = new Web3(window.ethereum || 'http://localhost:7545');\r\n      setWeb3(web3);\r\n      const accounts = await web3.eth.requestAccounts();\r\n      setAccounts(accounts);\r\n      const networkId = await web3.eth.net.getId();\r\n      const deployedNetwork = VerificateurPariteJSON.networks[networkId];\r\n      if (deployedNetwork) {\r\n        const contract = new web3.eth.Contract(\r\n          VerificateurPariteJSON.abi,\r\n          deployedNetwork.address\r\n        );\r\n        setContract(contract);\r\n        const block = await web3.eth.getBlock('latest');\r\n        setLatestBlock(block.number);\r\n      } else {\r\n        alert('VerificateurParite contract is not deployed on this network.');\r\n      }\r\n    };\r\n    init();\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const result = await contract.methods.estPair(nombre).call();\r\n      setResult(result ? 'Pair' : 'Impair');\r\n      setTxHash('Appel en lecture (call)');\r\n      setGasUsed('-');\r\n      const block = await web3.eth.getBlock('latest');\r\n      setLatestBlock(block.number);\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert('Erreur lors de la vérification de parité');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Exercice 7 : Vérificateur Parité</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          Nombre :\r\n          <input type=\"number\" value={nombre} onChange={(e) => setNombre(e.target.value)} required />\r\n        </label>\r\n        <button type=\"submit\">Vérifier la parité</button>\r\n      </form>\r\n      {result && (\r\n        <div>\r\n          <h3>Résultat :</h3>\r\n          <p>{result}</p>\r\n        </div>\r\n      )}\r\n      {/* Infos Blockchain */}\r\n      <div>\r\n        <h3>Infos Blockchain</h3>\r\n        <p>Compte connecté : {accounts[0]}</p>\r\n        <p>Dernier bloc : {latestBlock}</p>\r\n      </div>\r\n      {/* Infos transaction */}\r\n      {txHash && (\r\n        <div>\r\n          <h3>Détails de la dernière transaction</h3>\r\n          <p>Transaction Hash : {txHash}</p>\r\n          <p>Gas utilisé : {gasUsed}</p>\r\n        </div>\r\n      )}\r\n      {/* Lien vers sommaire */}\r\n      <br />\r\n      <Link to=\"/\">← Retour au sommaire</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VerificateurParitePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}