{
  "contractName": "VerificateurPositif",
  "abi": [
    {
      "inputs": [],
      "name": "lastChecked",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "nombre",
          "type": "int256"
        }
      ],
      "name": "estPositif",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "nombre",
          "type": "int256"
        }
      ],
      "name": "checkAndStore",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"nombre\",\"type\":\"int256\"}],\"name\":\"checkAndStore\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"nombre\",\"type\":\"int256\"}],\"name\":\"estPositif\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastChecked\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/VerificateurPositif.sol\":\"VerificateurPositif\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/VerificateurPositif.sol\":{\"keccak256\":\"0xa81e4bd5ba00501b500e30bf0e0f8a996359dc0452761e871e9066a1009336e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6ff254e258e39eab13b731816d072596f673e0aa05aee8cd663eb4e4884d959\",\"dweb:/ipfs/QmfZ6oaptrprn9ZSKXVndf8k6EsZ4b39SYqmv6YYkzVPQJ\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506101cb806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063e5ada13e14610046578063fa046abd14610064578063fe05af8b14610094575b600080fd5b61004e6100b0565b60405161005b91906100e6565b60405180910390f35b61007e60048036038101906100799190610132565b6100b6565b60405161008b919061017a565b60405180910390f35b6100ae60048036038101906100a99190610132565b6100c3565b005b60005481565b6000808212159050919050565b8060008190555050565b6000819050919050565b6100e0816100cd565b82525050565b60006020820190506100fb60008301846100d7565b92915050565b600080fd5b61010f816100cd565b811461011a57600080fd5b50565b60008135905061012c81610106565b92915050565b60006020828403121561014857610147610101565b5b60006101568482850161011d565b91505092915050565b60008115159050919050565b6101748161015f565b82525050565b600060208201905061018f600083018461016b565b9291505056fea2646970667358221220a68bd4955f7113d65dcdef79c3f52cffba5f109ee6b51eff4fd3ac9dabcbdf7b64736f6c63430008130033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c8063e5ada13e14610046578063fa046abd14610064578063fe05af8b14610094575b600080fd5b61004e6100b0565b60405161005b91906100e6565b60405180910390f35b61007e60048036038101906100799190610132565b6100b6565b60405161008b919061017a565b60405180910390f35b6100ae60048036038101906100a99190610132565b6100c3565b005b60005481565b6000808212159050919050565b8060008190555050565b6000819050919050565b6100e0816100cd565b82525050565b60006020820190506100fb60008301846100d7565b92915050565b600080fd5b61010f816100cd565b811461011a57600080fd5b50565b60008135905061012c81610106565b92915050565b60006020828403121561014857610147610101565b5b60006101568482850161011d565b91505092915050565b60008115159050919050565b6101748161015f565b82525050565b600060208201905061018f600083018461016b565b9291505056fea2646970667358221220a68bd4955f7113d65dcdef79c3f52cffba5f109ee6b51eff4fd3ac9dabcbdf7b64736f6c63430008130033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1787:8",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "51:32:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "61:16:8",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "72:5:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "61:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "33:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "43:7:8",
                "type": ""
              }
            ],
            "src": "7:76:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "152:52:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "169:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "191:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_int256",
                          "nodeType": "YulIdentifier",
                          "src": "174:16:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "174:23:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "162:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "162:36:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "162:36:8"
                }
              ]
            },
            "name": "abi_encode_t_int256_to_t_int256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "140:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "147:3:8",
                "type": ""
              }
            ],
            "src": "89:115:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "306:122:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "316:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "328:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "339:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "324:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "324:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "316:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "394:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "407:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "418:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "403:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "403:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_int256_to_t_int256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "352:41:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "352:69:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "352:69:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "278:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "290:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "301:4:8",
                "type": ""
              }
            ],
            "src": "210:218:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "474:35:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "484:19:8",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "500:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "494:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "494:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "484:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "467:6:8",
                "type": ""
              }
            ],
            "src": "434:75:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "604:28:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "621:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "624:1:8",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "614:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "614:12:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "614:12:8"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "515:117:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "727:28:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "744:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "747:1:8",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "737:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "737:12:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "737:12:8"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "638:117:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "803:78:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "859:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "868:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "871:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "861:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "861:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "861:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "826:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "850:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_int256",
                              "nodeType": "YulIdentifier",
                              "src": "833:16:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "833:23:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "823:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "823:34:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "816:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "816:42:8"
                  },
                  "nodeType": "YulIf",
                  "src": "813:62:8"
                }
              ]
            },
            "name": "validator_revert_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "796:5:8",
                "type": ""
              }
            ],
            "src": "761:120:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "938:86:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "948:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "970:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "957:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "957:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "948:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1012:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_int256",
                      "nodeType": "YulIdentifier",
                      "src": "986:25:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "986:32:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "986:32:8"
                }
              ]
            },
            "name": "abi_decode_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "916:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "924:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "932:5:8",
                "type": ""
              }
            ],
            "src": "887:137:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1095:262:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1141:83:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1143:77:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1143:79:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1143:79:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1116:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1125:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1112:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1112:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1137:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1108:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1108:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "1105:119:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1234:116:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1249:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1263:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1253:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1278:62:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1312:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1323:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1308:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1308:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1332:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_int256",
                          "nodeType": "YulIdentifier",
                          "src": "1288:19:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1288:52:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1278:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1065:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1076:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1088:6:8",
                "type": ""
              }
            ],
            "src": "1030:327:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1405:48:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1415:32:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1440:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1433:6:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1433:13:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1426:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1426:21:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1415:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1387:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1397:7:8",
                "type": ""
              }
            ],
            "src": "1363:90:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1518:50:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1535:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1555:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "1540:14:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1540:21:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1528:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1528:34:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1528:34:8"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1506:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1513:3:8",
                "type": ""
              }
            ],
            "src": "1459:109:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1666:118:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1676:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1688:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1699:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1684:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1684:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1676:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1750:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1763:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1774:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1759:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1759:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1712:37:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1712:65:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1712:65:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1638:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1650:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1661:4:8",
                "type": ""
              }
            ],
            "src": "1574:210:8"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_tuple_t_int256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
      "id": 8,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "60:255:7:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "60:255:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;96:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;127:96;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;231:81;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;96:22;;;;:::o;127:96::-;180:4;214:1;204:6;:11;;197:18;;127:96;;;:::o;231:81::-;298:6;284:11;:20;;;;231:81;:::o;7:76:8:-;43:7;72:5;61:16;;7:76;;;:::o;89:115::-;174:23;191:5;174:23;:::i;:::-;169:3;162:36;89:115;;:::o;210:218::-;301:4;339:2;328:9;324:18;316:26;;352:69;418:1;407:9;403:17;394:6;352:69;:::i;:::-;210:218;;;;:::o;515:117::-;624:1;621;614:12;761:120;833:23;850:5;833:23;:::i;:::-;826:5;823:34;813:62;;871:1;868;861:12;813:62;761:120;:::o;887:137::-;932:5;970:6;957:20;948:29;;986:32;1012:5;986:32;:::i;:::-;887:137;;;;:::o;1030:327::-;1088:6;1137:2;1125:9;1116:7;1112:23;1108:32;1105:119;;;1143:79;;:::i;:::-;1105:119;1263:1;1288:52;1332:7;1323:6;1312:9;1308:22;1288:52;:::i;:::-;1278:62;;1234:116;1030:327;;;;:::o;1363:90::-;1397:7;1440:5;1433:13;1426:21;1415:32;;1363:90;;;:::o;1459:109::-;1540:21;1555:5;1540:21;:::i;:::-;1535:3;1528:34;1459:109;;:::o;1574:210::-;1661:4;1699:2;1688:9;1684:18;1676:26;;1712:65;1774:1;1763:9;1759:17;1750:6;1712:65;:::i;:::-;1574:210;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract VerificateurPositif {\r\n    int public lastChecked;\r\n\r\n    function estPositif(int nombre) public pure returns (bool) {\r\n        return nombre >= 0;\r\n    }\r\n\r\n    function checkAndStore(int nombre) public {\r\n        lastChecked = nombre;\r\n    }\r\n}",
  "sourcePath": "C:\\Users\\ilias\\OneDrive\\Bureau\\contract_test\\contracts\\VerificateurPositif.sol",
  "ast": {
    "absolutePath": "project:/contracts/VerificateurPositif.sol",
    "exportedSymbols": {
      "VerificateurPositif": [
        467
      ]
    },
    "id": 468,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 442,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:7"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "VerificateurPositif",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 467,
        "linearizedBaseContracts": [
          467
        ],
        "name": "VerificateurPositif",
        "nameLocation": "69:19:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "e5ada13e",
            "id": 444,
            "mutability": "mutable",
            "name": "lastChecked",
            "nameLocation": "107:11:7",
            "nodeType": "VariableDeclaration",
            "scope": 467,
            "src": "96:22:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_int256",
              "typeString": "int256"
            },
            "typeName": {
              "id": 443,
              "name": "int",
              "nodeType": "ElementaryTypeName",
              "src": "96:3:7",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 455,
              "nodeType": "Block",
              "src": "186:37:7",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 451,
                      "name": "nombre",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 446,
                      "src": "204:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 452,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "214:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "204:11:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 450,
                  "id": 454,
                  "nodeType": "Return",
                  "src": "197:18:7"
                }
              ]
            },
            "functionSelector": "fa046abd",
            "id": 456,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "estPositif",
            "nameLocation": "136:10:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 447,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 446,
                  "mutability": "mutable",
                  "name": "nombre",
                  "nameLocation": "151:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 456,
                  "src": "147:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 445,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "147:3:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "146:12:7"
            },
            "returnParameters": {
              "id": 450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 449,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 456,
                  "src": "180:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 448,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "180:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "179:6:7"
            },
            "scope": 467,
            "src": "127:96:7",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 465,
              "nodeType": "Block",
              "src": "273:39:7",
              "statements": [
                {
                  "expression": {
                    "id": 463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 461,
                      "name": "lastChecked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 444,
                      "src": "284:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 462,
                      "name": "nombre",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 458,
                      "src": "298:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "284:20:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "id": 464,
                  "nodeType": "ExpressionStatement",
                  "src": "284:20:7"
                }
              ]
            },
            "functionSelector": "fe05af8b",
            "id": 466,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkAndStore",
            "nameLocation": "240:13:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 459,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 458,
                  "mutability": "mutable",
                  "name": "nombre",
                  "nameLocation": "258:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 466,
                  "src": "254:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 457,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "254:3:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "253:12:7"
            },
            "returnParameters": {
              "id": 460,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "273:0:7"
            },
            "scope": 467,
            "src": "231:81:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 468,
        "src": "60:255:7",
        "usedErrors": []
      }
    ],
    "src": "33:282:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x0dF1F9e51608C708397b4A17274dc9AB2040D19b",
      "transactionHash": "0xde215ce04fc724da5b0320e81647c72303b1b457a334850bc445f15caa0be439"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-07-28T22:37:37.055Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}