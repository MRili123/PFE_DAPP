{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ilias\\\\OneDrive\\\\Bureau\\\\contract_test\\\\client\\\\src\\\\pages\\\\PaymentPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Web3 from 'web3';\nimport PaymentJSON from '../../build/contracts/Payment.json';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PaymentPage() {\n  _s();\n  const [web3, setWeb3] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [accounts, setAccounts] = useState([]);\n  const [recipient, setRecipient] = useState('');\n  const [amount, setAmount] = useState('');\n  const [txHash, setTxHash] = useState('');\n  const [gasUsed, setGasUsed] = useState('');\n  const [latestBlock, setLatestBlock] = useState(null);\n  const [withdrawResult, setWithdrawResult] = useState('');\n  useEffect(() => {\n    const init = async () => {\n      const web3 = new Web3(window.ethereum || 'http://localhost:7545');\n      setWeb3(web3);\n      const accounts = await web3.eth.requestAccounts();\n      setAccounts(accounts);\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = PaymentJSON.networks[networkId];\n      if (deployedNetwork) {\n        const contract = new web3.eth.Contract(PaymentJSON.abi, deployedNetwork.address);\n        setContract(contract);\n        const block = await web3.eth.getBlock('latest');\n        setLatestBlock(block.number);\n        const rec = await contract.methods.recipient().call();\n        setRecipient(rec);\n      } else {\n        alert('Payment contract is not deployed on this network.');\n      }\n    };\n    init();\n  }, []);\n  const handlePayment = async e => {\n    e.preventDefault();\n    try {\n      const receipt = await contract.methods.receivePayment().send({\n        from: accounts[0],\n        value: web3.utils.toWei(amount, 'ether')\n      });\n      setTxHash(receipt.transactionHash);\n      setGasUsed(receipt.gasUsed);\n      setWithdrawResult('');\n      const block = await web3.eth.getBlock('latest');\n      setLatestBlock(block.number);\n    } catch (err) {\n      console.error(err);\n      alert('Erreur lors du paiement');\n    }\n  };\n  const handleWithdraw = async () => {\n    try {\n      const receipt = await contract.methods.withdraw().send({\n        from: accounts[0]\n      });\n      setTxHash(receipt.transactionHash);\n      setGasUsed(receipt.gasUsed);\n      setWithdrawResult('Retrait effectué avec succès');\n      const block = await web3.eth.getBlock('latest');\n      setLatestBlock(block.number);\n    } catch (err) {\n      console.error(err);\n      setWithdrawResult(\"Erreur lors du retrait : \" + err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Exercice 4 : Payment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Destinataire (recipient) : \", recipient]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlePayment,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Montant \\xE0 envoyer (en Ether) :\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: amount,\n          onChange: e => setAmount(e.target.value),\n          required: true,\n          min: \"0.000000000000000001\",\n          step: \"any\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Envoyer le paiement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleWithdraw,\n        children: \"Retirer les fonds (pour le destinataire)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), withdrawResult && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: withdrawResult\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Infos Blockchain\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Compte connect\\xE9 : \", accounts[0]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Dernier bloc : \", latestBlock]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), txHash && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"D\\xE9tails de la derni\\xE8re transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Transaction Hash : \", txHash]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Gas utilis\\xE9 : \", gasUsed]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"\\u2190 Retour au sommaire\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(PaymentPage, \"Cg4OYPXCmedJyqFhKnt7xpId3eA=\");\n_c = PaymentPage;\nexport default PaymentPage;\nvar _c;\n$RefreshReg$(_c, \"PaymentPage\");","map":{"version":3,"names":["React","useState","useEffect","Web3","PaymentJSON","Link","jsxDEV","_jsxDEV","PaymentPage","_s","web3","setWeb3","contract","setContract","accounts","setAccounts","recipient","setRecipient","amount","setAmount","txHash","setTxHash","gasUsed","setGasUsed","latestBlock","setLatestBlock","withdrawResult","setWithdrawResult","init","window","ethereum","eth","requestAccounts","networkId","net","getId","deployedNetwork","networks","Contract","abi","address","block","getBlock","number","rec","methods","call","alert","handlePayment","e","preventDefault","receipt","receivePayment","send","from","value","utils","toWei","transactionHash","err","console","error","handleWithdraw","withdraw","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","target","required","min","step","onClick","to","_c","$RefreshReg$"],"sources":["C:/Users/ilias/OneDrive/Bureau/contract_test/client/src/pages/PaymentPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Web3 from 'web3';\r\nimport PaymentJSON from '../../build/contracts/Payment.json';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction PaymentPage() {\r\n  const [web3, setWeb3] = useState(null);\r\n  const [contract, setContract] = useState(null);\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [recipient, setRecipient] = useState('');\r\n  const [amount, setAmount] = useState('');\r\n  const [txHash, setTxHash] = useState('');\r\n  const [gasUsed, setGasUsed] = useState('');\r\n  const [latestBlock, setLatestBlock] = useState(null);\r\n  const [withdrawResult, setWithdrawResult] = useState('');\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      const web3 = new Web3(window.ethereum || 'http://localhost:7545');\r\n      setWeb3(web3);\r\n      const accounts = await web3.eth.requestAccounts();\r\n      setAccounts(accounts);\r\n      const networkId = await web3.eth.net.getId();\r\n      const deployedNetwork = PaymentJSON.networks[networkId];\r\n      if (deployedNetwork) {\r\n        const contract = new web3.eth.Contract(\r\n          PaymentJSON.abi,\r\n          deployedNetwork.address\r\n        );\r\n        setContract(contract);\r\n        const block = await web3.eth.getBlock('latest');\r\n        setLatestBlock(block.number);\r\n        const rec = await contract.methods.recipient().call();\r\n        setRecipient(rec);\r\n      } else {\r\n        alert('Payment contract is not deployed on this network.');\r\n      }\r\n    };\r\n    init();\r\n  }, []);\r\n\r\n  const handlePayment = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const receipt = await contract.methods.receivePayment().send({ from: accounts[0], value: web3.utils.toWei(amount, 'ether') });\r\n      setTxHash(receipt.transactionHash);\r\n      setGasUsed(receipt.gasUsed);\r\n      setWithdrawResult('');\r\n      const block = await web3.eth.getBlock('latest');\r\n      setLatestBlock(block.number);\r\n    } catch (err) {\r\n      console.error(err);\r\n      alert('Erreur lors du paiement');\r\n    }\r\n  };\r\n\r\n  const handleWithdraw = async () => {\r\n    try {\r\n      const receipt = await contract.methods.withdraw().send({ from: accounts[0] });\r\n      setTxHash(receipt.transactionHash);\r\n      setGasUsed(receipt.gasUsed);\r\n      setWithdrawResult('Retrait effectué avec succès');\r\n      const block = await web3.eth.getBlock('latest');\r\n      setLatestBlock(block.number);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setWithdrawResult(\"Erreur lors du retrait : \" + err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Exercice 4 : Payment</h2>\r\n      <div>\r\n        <p>Destinataire (recipient) : {recipient}</p>\r\n      </div>\r\n      {/* Formulaire de paiement */}\r\n      <form onSubmit={handlePayment}>\r\n        <label>\r\n          Montant à envoyer (en Ether) :\r\n          <input type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)} required min=\"0.000000000000000001\" step=\"any\" />\r\n        </label>\r\n        <button type=\"submit\">Envoyer le paiement</button>\r\n      </form>\r\n      {/* Bouton de retrait */}\r\n      <div>\r\n        <button onClick={handleWithdraw}>Retirer les fonds (pour le destinataire)</button>\r\n        {withdrawResult && <p>{withdrawResult}</p>}\r\n      </div>\r\n      {/* Infos Blockchain */}\r\n      <div>\r\n        <h3>Infos Blockchain</h3>\r\n        <p>Compte connecté : {accounts[0]}</p>\r\n        <p>Dernier bloc : {latestBlock}</p>\r\n      </div>\r\n      {/* Infos transaction */}\r\n      {txHash && (\r\n        <div>\r\n          <h3>Détails de la dernière transaction</h3>\r\n          <p>Transaction Hash : {txHash}</p>\r\n          <p>Gas utilisé : {gasUsed}</p>\r\n        </div>\r\n      )}\r\n      {/* Lien vers sommaire */}\r\n      <br />\r\n      <Link to=\"/\">← Retour au sommaire</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PaymentPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}